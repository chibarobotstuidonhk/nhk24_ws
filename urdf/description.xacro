<?xml version="1.0"?>
<robot name="nhk24zero" xmlns:xacro="http://ros.org/wiki/xacro">

	<xacro:property name="base_length" value="0.700" />
	<xacro:property name="base_width" value="0.700" />
	<xacro:property name="base_height" value="0.050" />
	<xacro:property name="wheel_radius" value="0.100" />
	<xacro:property name="wheel_width" value="0.020" />
	<xacro:property name="wheel_zoff" value="0.050" />

	<!-- Define intertial property macros  -->
	<xacro:macro name="box_inertia" params="m w h d">
		<inertial>
		<origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
		<mass value="${m}"/>
		<inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
		</inertial>
	</xacro:macro>
	
	<xacro:macro name="wheel_inertia" params="m r h">
		<inertial>
		<origin xyz="0 0 0" rpy="${pi/2} 0 0" />
		<mass value="${m}"/>
		<inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
		</inertial>
	</xacro:macro>

	<!-- Base Link -->
	<link name="base_link">
		<visual>
			<geometry>
				<box size="${base_length} ${base_width} ${base_height}" />
			</geometry>
			<material name="Cyan">
				<color rgba="0 1.0 1.0 1.0" />
			</material>
		</visual>
		<collision>
			<geometry>
			<box size="${base_length} ${base_width} ${base_height}"/>
			</geometry>
		</collision>
	
		<xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
	</link>

	<link name="base_footprint_link">
	</link>
	
	<joint name="base_footprint_joint" type="fixed">
		<parent link="base_link" />
		<child link="base_footprint_link" />
		<origin xyz="0 0 0" />
	</joint>

	<!-- Omni Wheels -->
	<xacro:macro name="wheel" params="prefix x_reflect y_reflect wheel_yaw">
		<link name="${prefix}_link">
			<visual>
				<origin xyz="0 0 0" rpy="${pi/2} 0 0" />
				<geometry>
					<cylinder radius="${wheel_radius}" length="${wheel_width}" />
				</geometry>
				<material name="Gray">
					<color rgba="0.5 0.5 0.5 1.0" />
				</material>
			</visual>

			<collision>
				<origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
				<geometry>
				<cylinder radius="${wheel_radius}" length="${wheel_width}"/>
				</geometry>
			</collision>
		
			<xacro:wheel_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
		</link>

		<joint name="${prefix}_joint" type="continuous">
			<parent link="base_link" />
			<child link="${prefix}_link" />
			<origin xyz="${x_reflect*base_length/2} ${y_reflect*base_width/2} ${-wheel_zoff}"
				rpy="0 0 ${pi*wheel_yaw/4}" />
			<axis xyz="${-x_reflect} ${-y_reflect} 0" />
		</joint>
	</xacro:macro>

	<xacro:wheel prefix="drivewhl_1" x_reflect="1" y_reflect="1" wheel_yaw="3" />
	<xacro:wheel prefix="drivewhl_2" x_reflect="-1" y_reflect="1" wheel_yaw="-3" />
	<xacro:wheel prefix="drivewhl_3" x_reflect="-1" y_reflect="-1" wheel_yaw="-1" />
	<xacro:wheel prefix="drivewhl_4" x_reflect="1" y_reflect="-1" wheel_yaw="1" />

	<link name="imu_link">
		<visual>
			<geometry>
				<box size="0.1 0.1 0.1" />
			</geometry>
		</visual>
	
		<collision>
			<geometry>
				<box size="0.1 0.1 0.1" />
			</geometry>
		</collision>
	
		<xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1" />
	</link>
	
	<joint name="imu_joint" type="fixed">
		<parent link="base_link" />
		<child link="imu_link" />
		<origin xyz="0 0 0.30" />
	</joint>
	
	<gazebo reference="imu_link">
		<sensor name="imu_sensor" type="imu">
			<plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
				<ros>
					<namespace>/demo</namespace>
					<remapping>~/out:=imu</remapping>
				</ros>
				<initial_orientation_as_reference>false</initial_orientation_as_reference>
			</plugin>
			<always_on>true</always_on>
			<update_rate>100</update_rate>
			<visualize>true</visualize>
			<imu>
				<angular_velocity>
					<x>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>2e-4</stddev>
							<bias_mean>0.0000075</bias_mean>
							<bias_stddev>0.0000008</bias_stddev>
						</noise>
					</x>
					<y>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>2e-4</stddev>
							<bias_mean>0.0000075</bias_mean>
							<bias_stddev>0.0000008</bias_stddev>
						</noise>
					</y>
					<z>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>2e-4</stddev>
							<bias_mean>0.0000075</bias_mean>
							<bias_stddev>0.0000008</bias_stddev>
						</noise>
					</z>
				</angular_velocity>
				<linear_acceleration>
					<x>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>1.7e-2</stddev>
							<bias_mean>0.1</bias_mean>
							<bias_stddev>0.001</bias_stddev>
						</noise>
					</x>
					<y>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>1.7e-2</stddev>
							<bias_mean>0.1</bias_mean>
							<bias_stddev>0.001</bias_stddev>
						</noise>
					</y>
					<z>
						<noise type="gaussian">
							<mean>0.0</mean>
							<stddev>1.7e-2</stddev>
							<bias_mean>0.1</bias_mean>
							<bias_stddev>0.001</bias_stddev>
						</noise>
					</z>
				</linear_acceleration>
			</imu>
		</sensor>
	</gazebo>

	<link name="lidar_link">
		<inertial>
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <mass value="0.125"/>
		  <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
		</inertial>
	  
		<collision>
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <geometry>
			 <cylinder radius="0.0508" length="0.055"/>
		  </geometry>
		</collision>
	  
		<visual>
		  <origin xyz="0 0 0" rpy="0 0 0"/>
		  <geometry>
			 <cylinder radius="0.0508" length="0.055"/>
		  </geometry>
		</visual>
	</link>
	  
	<joint name="lidar_joint" type="fixed">
		<parent link="base_link"/>
		<child link="lidar_link"/>
		<origin xyz="0 -0 0.0200" rpy="0 0 0"/>
	</joint>
	  
	<gazebo reference="lidar_link">
		<sensor name="lidar" type="ray">
		  <always_on>true</always_on>
		  <visualize>true</visualize>
		  <update_rate>5</update_rate>
		  <ray>
			<scan>
			  <horizontal>
				<samples>360</samples>
				<resolution>1.000000</resolution>
				<min_angle>0.000000</min_angle>
				<max_angle>6.280000</max_angle>
			  </horizontal>
			</scan>
			<range>
			  <min>0.120000</min>
			  <max>3.5</max>
			  <resolution>0.015000</resolution>
			</range>
			<noise>
			  <type>gaussian</type>
			  <mean>0.0</mean>
			  <stddev>0.01</stddev>
			</noise>
		  </ray>
		  <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
			<ros>
			  <remapping>~/out:=scan</remapping>
			</ros>
			<output_type>sensor_msgs/LaserScan</output_type>
			<frame_name>lidar_link</frame_name>
		  </plugin>
		</sensor>
	  </gazebo>

	<link name="camera_link">
		<visual>
			<geometry>
				<box size="0.1 0.1 0.1" />
			</geometry>
		</visual>
	</link>

	<joint name="camera_joint" type="fixed">
		<parent link="base_link"/>
		<child link="camera_link"/>
		<origin xyz="0 0.500 0.200" rpy="${-pi/2} 0 0"/>
	</joint>
</robot>